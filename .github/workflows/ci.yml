# This workflow behaves different depending on the event:
# 
# - On `push` events:
#   - It will update PRs that are out-of-sync with the `main` branch.
# - On `pull_request` events:
#   - Runs `sbt ci-test` on the project on differnt JDKs (this task should be added to the project as a command alias 
#     containing the necessary steps to compile, check formatters, launch tests, upload coverage...).
#
# An example of this `ci-test` alias can be found in https://github.com/alejandrohdezma/sbt-github/blob/main/build.sbt.
#
# It will also do the following:
# 
# - It will automatically label PRs based on head branch.
# - It will automatically approve `Scala Steward` PRs.
# - On Scala Steward PRs it will launch formatters and this plugin's `generateCiFiles` task and push the results to the
#   same PR.

name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, labeled, unlabeled, synchronize]

jobs:
  auto-update-outdated-prs-to-latest-main:
    name: Update outdated PRs to latest `main`
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Get the GitHub App installation token
        uses: alejandrohdezma/actions/alejandrohdezma-steward-token@main
        id: github_app
        with:
          private-key: ${{ secrets.SCALA_STEWARD_APP_PRIVATE_KEY }}
      - name: Update outdated PRs to latest `main`
        uses: alejandrohdezma/actions/update-outdated-prs@main
        with:
          github-token: ${{ steps.github_app.outputs.token }}

  ci:
    if: github.event_name == 'pull_request'
    name: Auto-label...
    runs-on: ubuntu-latest
    steps:
      - name: Update & check PR labels
        uses: alejandrohdezma/actions/labeler@main

  ci-steward:
    if: |
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository &&
        github.event.pull_request.user.login == 'alejandrohdezma-steward[bot]'
    name: Auto-approve, enable auto-merge (Scala Steward)...
    runs-on: ubuntu-latest
    steps:
      - name: Enable auto-merge for this PR
        run: gh pr merge --auto --merge ${{github.event.pull_request.number}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve Scala Steward PRs
        run: gh pr review --aprove ${{github.event.pull_request.number}}
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}

      - name: Checkout project
        uses: actions/checkout@v2.3.5

      - name: Run `sbt generateCiFiles`
        uses: alejandrohdezma/actions/scala@main
        with:
          jvm: adopt:1.11
          task: generateCiFiles

      - name: Commit changes by `sbt generateCiFiles`
        uses: alejandrohdezma/actions/commit-and-push@main
        with:
          message: Run `sbt generateCiFiles`

      - name: Run `sbt fix`
        uses: alejandrohdezma/actions/scala@main
        with:
          jvm: adopt:1.11
          task: fix

      - name: Commit changes by `sbt fix`
        uses: alejandrohdezma/actions/commit-and-push@main
        with:
          message: Run `sbt fix`

  test:
    needs: [ci, ci-steward]
    if: always() && !contains(needs.*.result, 'failure') && github.event_name == 'pull_request'
    name: Run "sbt ci-test" on JDK ${{ matrix.jdk }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk:
          - adopt:1.8
          - adopt:1.11
          - adopt:1.15
    steps:
      - name: Checkout project
        uses: actions/checkout@v2.3.5
        with:
          ref: ${{ github.head_ref }}

      - name: Run `sbt ci-test` on ${{ matrix.jdk }}
        uses: alejandrohdezma/actions/scala@main
        with:
          jvm: ${{ matrix.jdk }}
          task: ci-test
